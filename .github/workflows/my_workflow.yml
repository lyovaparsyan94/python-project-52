name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-sonarqube:
    runs-on: ubuntu-latest

    env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DJANGO_SETTINGS_MODULE: task_manager.settings
        ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
        ROLLBAR_ENV: development

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: make ci-install

      - name: Show versions
        run: |
          python --version
          uv --version
          uv run python -c "import django,sys; print('Django', django.get_version())"
      
      - name: Run Ruff linter
        run: make lint

      - name: Run migrations
        run: make ci-migrate

      - name: Run tests with coverage
        run: make ci-test

      - name: SonarQubeScan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=lyovaparsyan94_python-project-52
            -Dsonar.organization=lyovaparsyan94
            -Dsonar.projectName=python-project-52
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=task_manager
            -Dsonar.tests=task_manager/labels/tests.py,task_manager/statuses/tests.py,task_manager/tasks/tests.py,task_manager/users/tests.py,task_manager/tests.py
            -Dsonar.exclusions=**/migrations/**,**/__pycache__/**,**/tests.py,**/settings.py
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.python.coverage.reportPaths=coverage.xml
